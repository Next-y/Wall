1.
SELECT model, speed, hd
FROM PC
WHERE price < 500

2.
SELECT DISTINCT maker
FROM Product
WHERE type = 'Printer'

3.
SELECT model, ram, screen
FROM Laptop
WHERE price > 1000

4.
SELECT *
FROM Printer
WHERE color = 'y'

5.
SELECT model, speed, hd
FROM PC
WHERE CD in ('12x','24x') AND price < 600

6.
SELECT DISTINCT Product.maker, Laptop.speed
FROM Product
JOIN Laptop ON Product.model = Laptop.model
WHERE Laptop.hd >= 10 AND Product.type = 'Laptop'

7.
WITH cte as(
SELECT model FROM Product WHERE maker = 'B'
)

SELECT model,price
FROM PC
WHERE model in (SELECT * FROM cte)
UNION
SELECT model,price
FROM Laptop
WHERE model in (SELECT * FROM cte)
UNION
SELECT model,price
FROM Printer
WHERE model in (SELECT * FROM cte)

8.
SELECT maker 
FROM Product
WHERE type = 'PC'
EXCEPT
SELECT maker
FROM Product
WHERE type = 'Laptop'

9.
SELECT DISTINCT maker
FROM product
JOIN PC ON Product.model = PC.model
WHERE speed >= 450

10.
SELECT model, price
FROM Printer
WHERE price = (SELECT MAX(price) FROM Printer)

11.
SELECT AVG(speed)
FROM PC

12.
SELECT AVG(speed)
FROM Laptop
WHERE price > 1000

13.
SELECT AVG(speed)
FROM PC
JOIN Product on Product.model = PC.model
WHERE maker = 'A'

14.
SELECT Ships.class, name, country
FROM Ships
JOIN Classes ON Ships.class = Classes.class
WHERE numGuns >= 10

15.
select hd
from PC
group by hd
having count(hd) >= 2

16.
SELECT DISTINCT pc1.model, pc2.model, pc1.speed, pc1.ram
FROM PC pc1
CROSS JOIN PC pc2
WHERE pc1.speed = pc2.speed AND pc1.ram = pc2.ram AND pc1.model > pc2.model

17.
SELECT DISTINCT type, p.model, speed
FROM Laptop l
JOIN Product p on p.model = l.model
WHERE speed < (SELECT MIN(speed) FROM PC)

18.
SELECT DISTINCT maker, price
FROM Product
JOIN Printer ON Product.model = Printer.model
WHERE price = (SELECT MIN(price) FROM Printer WHERE color = 'y')
AND color = 'y'

19.
SELECT maker, AVG(screen)
FROM Laptop
JOIN Product on Product.model = Laptop.model
GROUP BY maker

20.
SELECT maker, COUNT(DISTINCT model) 
FROM Product
WHERE type = 'PC'
GROUP BY maker
HAVING COUNT(DISTINCT model) >=3

21.
SELECT DISTINCT maker, MAX(price)
FROM Product
JOIN PC ON Product.model = PC.model
WHERE maker IN (SELECT DISTINCT maker FROM Product WHERE type = 'PC') 
GROUP BY maker

22.
SELECT speed, AVG(price)
FROM PC
WHERE speed > 600
GROUP BY speed

23.
SELECT maker
FROM Product
WHERE model IN (SELECT model FROM PC WHERE speed >= 750)
INTERSECT
SELECT maker
FROM Product
WHERE model IN (SELECT model FROM Laptop WHERE speed >= 750)

24.
WITH cte as(
SELECT price, model
FROM PC
UNION
SELECT price, model
FROM Laptop
UNION 
Select price, model
FROM Printer
)
SELECT model
FROM cte
WHERE price = (SELECT MAX(price) FROM cte)

25.
WITH cte AS(
SELECT MIN(ram) AS min
FROM PC
)

SELECT DISTINCT maker
FROM Product
JOIN PC on Product.model = PC.model
WHERE maker IN (SELECT maker FROM Product WHERE type = 'Printer')
            AND ram = (SELECT min FROM cte)
            AND speed = (SELECT MAX(speed) FROM PC WHERE ram = (SELECT min FROM cte))

26.
WITH cte as(
SELECT maker, price
FROM Product
JOIN PC ON Product.model = PC.model
UNION ALL
SELECT maker, price
FROM Product
JOIN Laptop ON Product.model = Laptop.model
)

SELECT AVG(price)
FROM cte
GROUP BY maker
HAVING maker = 'A'

27.
WITH cte as(
SELECT DISTINCT maker
FROM Product
WHERE type = 'Printer'
)
SELECT DISTINCT maker, AVG(hd)
FROM Product
JOIN PC ON Product.model = PC.model
WHERE maker IN (SELECT maker FROM cte)
GROUP BY maker

28.
SELECT COUNT(*)
FROM (
SELECT maker, COUNT(DISTINCT model) model_count
FROM Product
GROUP BY maker
HAVING COUNT(DISTINCT model) = 1
) AS subquery

29.
WITH cte as(
SELECT point, date, SUM(inc) as income, NULL AS outcome
FROM Income_o
GROUP BY point, date
UNION
SELECT point, date, NULL as income, SUM(out) as outcome
FROM Outcome_o
GROUP BY point, date
)

SELECT point, date, MAX(income) as income, MAX(outcome) AS outcome
FROM cte
GROUP BY point, date

30.
WITH cte as(
SELECT point, date, SUM(inc) as income, NULL AS outcome
FROM Income
GROUP BY point, date
UNION
SELECT point, date, NULL as income, SUM(out) as outcome
FROM Outcome
GROUP BY point, date
)

SELECT point, date, MAX(outcome) AS outcome, MAX(income) as income
FROM cte
GROUP BY point, date

31.
SELECT class, country
FROM Classes
WHERE bore >= 16

33.
SELECT ship
FROM Outcomes
WHERE result = 'sunk' AND battle = 'North Atlantic'

34.
SELECT DISTINCT name
FROM Ships
JOIN Classes ON Ships.class = Classes.class
WHERE displacement > 35000 AND launched >= 1922 AND type = 'bb'

35.
SELECT model, type
FROM Product 
WHERE model not LIKE '%[^a-z^A-Z]%' OR model not LIKE '%[^0-9]%'

36.
SELECT s.name AS head_ship
FROM Ships s
JOIN Classes c ON s.class = c.class
WHERE s.name = s.class
UNION
SELECT o.ship AS head_ship
FROM Outcomes o
JOIN Classes c ON o.ship = c.class

37.
WITH cte AS(
SELECT name, Classes.class as cls
FROM Ships
JOIN Classes ON Classes.class = Ships.class
UNION
SELECT ship, Classes.class as cls
FROM Outcomes
JOIN Classes ON Classes.class = Outcomes.ship
)
SELECT cls
FROM cte
GROUP BY cls
HAVING COUNT(*) = 1

38.
SELECT country
FROM Classes
WHERE type = 'bb'
INTERSECT
SELECT country
FROM Classes
WHERE type = 'bc'


